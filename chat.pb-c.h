/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: chat.proto */

#ifndef PROTOBUF_C_chat_2eproto__INCLUDED
#define PROTOBUF_C_chat_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Chat__Message Chat__Message;
typedef struct _Chat__UserInfo Chat__UserInfo;
typedef struct _Chat__UserServerOperation Chat__UserServerOperation;


/* --- enums --- */


/* --- messages --- */

struct  _Chat__Message
{
  ProtobufCMessage base;
  char *receiver;
  char *sender;
  char *message;
};
#define CHAT__MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&chat__message__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Chat__UserInfo
{
  ProtobufCMessage base;
  char *username;
  char *ip;
  int32_t status;
};
#define CHAT__USER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&chat__user_info__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


struct  _Chat__UserServerOperation
{
  ProtobufCMessage base;
  protobuf_c_boolean r_type;
  char *user_name;
  size_t n_all_users;
  Chat__UserInfo **all_users;
  int32_t new_status;
  int32_t server_status;
};
#define CHAT__USER_SERVER_OPERATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&chat__user_server_operation__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0,NULL, 0, 0 }


/* Chat__Message methods */
void   chat__message__init
                     (Chat__Message         *message);
size_t chat__message__get_packed_size
                     (const Chat__Message   *message);
size_t chat__message__pack
                     (const Chat__Message   *message,
                      uint8_t             *out);
size_t chat__message__pack_to_buffer
                     (const Chat__Message   *message,
                      ProtobufCBuffer     *buffer);
Chat__Message *
       chat__message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   chat__message__free_unpacked
                     (Chat__Message *message,
                      ProtobufCAllocator *allocator);
/* Chat__UserInfo methods */
void   chat__user_info__init
                     (Chat__UserInfo         *message);
size_t chat__user_info__get_packed_size
                     (const Chat__UserInfo   *message);
size_t chat__user_info__pack
                     (const Chat__UserInfo   *message,
                      uint8_t             *out);
size_t chat__user_info__pack_to_buffer
                     (const Chat__UserInfo   *message,
                      ProtobufCBuffer     *buffer);
Chat__UserInfo *
       chat__user_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   chat__user_info__free_unpacked
                     (Chat__UserInfo *message,
                      ProtobufCAllocator *allocator);
/* Chat__UserServerOperation methods */
void   chat__user_server_operation__init
                     (Chat__UserServerOperation         *message);
size_t chat__user_server_operation__get_packed_size
                     (const Chat__UserServerOperation   *message);
size_t chat__user_server_operation__pack
                     (const Chat__UserServerOperation   *message,
                      uint8_t             *out);
size_t chat__user_server_operation__pack_to_buffer
                     (const Chat__UserServerOperation   *message,
                      ProtobufCBuffer     *buffer);
Chat__UserServerOperation *
       chat__user_server_operation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   chat__user_server_operation__free_unpacked
                     (Chat__UserServerOperation *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Chat__Message_Closure)
                 (const Chat__Message *message,
                  void *closure_data);
typedef void (*Chat__UserInfo_Closure)
                 (const Chat__UserInfo *message,
                  void *closure_data);
typedef void (*Chat__UserServerOperation_Closure)
                 (const Chat__UserServerOperation *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor chat__message__descriptor;
extern const ProtobufCMessageDescriptor chat__user_info__descriptor;
extern const ProtobufCMessageDescriptor chat__user_server_operation__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_chat_2eproto__INCLUDED */
